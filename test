#!/usr/bin/env bash

# Utility colored print functions.
pass () {
  echo $'[ \033[00;32mPASS\033[0m ]' "$@"
}

fail () {
  echo $'[ \033[0;31mFAIL\033[0m ]' "$@"
}

printIndented () {
  IFS=$'\n'
  for line in $1; do
    echo $'\t' "$line"
  done
}

shellBinary="bin/ushell"

index=0
e2eTest () {
  local name="$1"
  local input="$2"
  local expected="$3"

  (( index+=1 ))

  output=$(echo -e "$input" | "$shellBinary" 2>&1)

  if ! [ "$output" == "$expected" ]; then
    fail "[$index] $name"
    echo "The real output:"
    printIndented "$output"
    echo "did not equal the expected output:"
    printIndented "$expected"
    echo
  else
    pass "[$index] $name"
  fi
}

buildOutput () {
  echo "Welcome to microshell, $USER"'!'
  while [[ "$#" -gt 0 ]]; do
    echo "$1"
    shift
  done
  echo "Bye!"
}

echo "Building µShell..."
make shell || fail "Build failed."

echo "Running µShell end-to-end tests..."

# TODO(andrei) Remove redundant 'exit' calls as soon as the shell can detect
# EOF characters.
expectedBasicExit=$(buildOutput)
e2eTest "Basic exit behavior" "exit" "$expectedBasicExit"
expectedPwdBuiltin=$(buildOutput $(pwd))
e2eTest "pwd builtin" $'pwd\nexit' "$expectedPwdBuiltin"
expectedMooBuiltin=$(buildOutput 'Moo!')
e2eTest "module-provided builtin \"moo\"" $'moo\nexit' "$expectedMooBuiltin"
